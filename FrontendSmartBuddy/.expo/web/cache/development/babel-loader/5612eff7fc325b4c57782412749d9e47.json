{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/azemina/Desktop/CS:EE 4th year/Semester 2/Applied Programming/SmartBuddy/FrontendSmartBuddy/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SplashScreen } from 'expo';\nimport * as Font from 'expo-font';\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport BottomTabNavigator from \"./navigation/BottomTabNavigator\";\nimport useLinking from \"./navigation/useLinking\";\nimport PublicProfile from \"./screens/PublicProfile\";\nimport Filters from \"./screens/Filters\";\nimport SignUp from \"./screens/SignUp\";\nimport Login from \"./screens/Login\";\nimport EditProfile from \"./screens/EditProfile\";\nvar Stack = createStackNavigator();\nexport default function App(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoadingComplete = _React$useState2[0],\n      setLoadingComplete = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      initialNavigationState = _React$useState4[0],\n      setInitialNavigationState = _React$useState4[1];\n\n  var containerRef = React.useRef();\n\n  var _useLinking = useLinking(containerRef),\n      getInitialState = _useLinking.getInitialState;\n\n  React.useEffect(function () {\n    function loadResourcesAndDataAsync() {\n      return _regeneratorRuntime.async(function loadResourcesAndDataAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              SplashScreen.preventAutoHide();\n              _context.t0 = setInitialNavigationState;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(getInitialState());\n\n            case 5:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Font.loadAsync(_objectSpread({}, Ionicons.font, {\n                'space-mono': require(\"./assets/fonts/SpaceMono-Regular.ttf\")\n              })));\n\n            case 9:\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t2 = _context[\"catch\"](0);\n              console.warn(_context.t2);\n\n            case 14:\n              _context.prev = 14;\n              setLoadingComplete(true);\n              SplashScreen.hide();\n              return _context.finish(14);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 11, 14, 18]], Promise);\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return null;\n  } else {\n    return React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, React.createElement(ScrollView, {\n      style: styles.container,\n      contentContainerStyle: styles.contentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.welcomeContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      },\n      style: styles.SignIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.SignInText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, \"Sign in\")), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('SignUp');\n      },\n      style: styles.SignIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.SignInText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, \"Sign up\")))), Platform.OS === 'ios' && React.createElement(StatusBar, {\n      barStyle: \"default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 35\n      }\n    }), React.createElement(NavigationContainer, {\n      ref: containerRef,\n      initialState: initialNavigationState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, React.createElement(Stack.Navigator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"PublicProfile\",\n      component: PublicProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Filters\",\n      component: Filters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"EditProfile\",\n      component: EditProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"SignUp\",\n      component: SignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }))));\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  }\n});","map":{"version":3,"sources":["/Users/azemina/Desktop/CS:EE 4th year/Semester 2/Applied Programming/SmartBuddy/FrontendSmartBuddy/App.js"],"names":["React","SplashScreen","Font","Ionicons","NavigationContainer","createStackNavigator","BottomTabNavigator","useLinking","PublicProfile","Filters","SignUp","Login","EditProfile","Stack","App","props","useState","isLoadingComplete","setLoadingComplete","initialNavigationState","setInitialNavigationState","containerRef","useRef","getInitialState","useEffect","loadResourcesAndDataAsync","preventAutoHide","loadAsync","font","require","console","warn","hide","skipLoadingScreen","styles","container","contentContainer","welcomeContainer","navigation","navigate","SignIn","SignInText","Platform","OS","StyleSheet","create","flex","backgroundColor"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Platform, StatusBar, StyleSheet, View } from 'react-native';\nimport { SplashScreen } from 'expo';\nimport * as Font from 'expo-font';\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport BottomTabNavigator from './navigation/BottomTabNavigator';\nimport useLinking from './navigation/useLinking';\n\nimport PublicProfile from './screens/PublicProfile';\nimport Filters from './screens/Filters';\nimport SignUp from './screens/SignUp';\nimport Login from './screens/Login';\nimport EditProfile from './screens/EditProfile';\n\n\nconst Stack = createStackNavigator();\n\nexport default function App(props) {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n  const [initialNavigationState, setInitialNavigationState] = React.useState();\n  const containerRef = React.useRef();\n  const { getInitialState } = useLinking(containerRef);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHide();\n\n        // Load our initial navigation state\n        setInitialNavigationState(await getInitialState());\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('./assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hide();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return null;\n  } else {\n    return (\n      <View style={styles.container}>\n        <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n          <View style={styles.welcomeContainer}>\n            <TouchableOpacity onPress={() => navigation.navigate('Login')} style={styles.SignIn}>\n              <Text style={styles.SignInText}>Sign in</Text>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={() => navigation.navigate('SignUp')} style={styles.SignIn}>\n              <Text style={styles.SignInText}>Sign up</Text>\n            </TouchableOpacity>\n          </View>\n        </ScrollView>\n        {Platform.OS === 'ios' && <StatusBar barStyle=\"default\" />}\n        <NavigationContainer ref={containerRef} initialState={initialNavigationState}>\n          <Stack.Navigator>\n            <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n            <Stack.Screen name=\"PublicProfile\" component={PublicProfile} />\n            <Stack.Screen name=\"Filters\" component={Filters} />\n            <Stack.Screen name=\"EditProfile\" component={EditProfile}/>\n            <Stack.Screen name=\"Login\" component={Login} />\n            <Stack.Screen name=\"SignUp\" component={SignUp} />\n\n\n\n          </Stack.Navigator>\n        </NavigationContainer>\n      </View>\n\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n   \n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}